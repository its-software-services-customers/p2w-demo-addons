apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tor
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: tor
  serviceName: tor
  volumeClaimTemplates:
  - metadata:
      name: tor
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
  template:
    metadata:
      labels:
        app: tor
    spec:
      volumes:
      - name: home
        emptyDir: {}
      - name: controller-scripts
        configMap:
          name: controller-scripts-cm
          defaultMode: 0744
      - name: torrc
        configMap:
          name: torrc-cm
      containers:
      - image: {{ .Values.proxy.image.name }}:{{ .Values.proxy.image.version }}
        imagePullPolicy: Always
        name: proxy-server
        command: ["tor", "-f"]
        args: ["/configs/torrc"]
        resources: {}
        env:
        - name: TOR_SERVICE
          value: 'true'
        - name: TOR_SERVICE_HOSTS
          value: 'services=8080:loki-log-grafana.loki-log.svc.cluster.local:80,8081:monitoring-production-grafana.monitoring.svc.cluster.local:80,8443:argocd-server.argocd.svc.cluster.local:443,443:wordpress-production.wordpress.svc.cluster.local:443'
        volumeMounts:
        - mountPath: /tor
          name: tor
        - mountPath: /configs
          name: torrc
        securityContext: 
          runAsUser: 0
      #- image: {{ .Values.controller.image.name }}:{{ .Values.controller.image.version }}
      #  command:
      #  - /bin/sh
      #  - -c
      #  args:
      #  - /scripts/controller.bash
      #  imagePullPolicy: Always
      #  name: controller
      #  resources: {}
      #  env: []
      #  volumeMounts:
      #  - mountPath: /scripts
      #    name: controller-scripts
      #  - mountPath: /tor
      #    name: tor
      restartPolicy: Always
